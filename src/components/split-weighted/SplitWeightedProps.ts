/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

import type {CtaProps} from "../cta/CtaProps";
import type {DividerProps} from "../divider/DividerProps";
import type {FaqProps} from "../faq/FaqProps";
import type {FeaturesProps} from "../features/FeaturesProps";
import type {GalleryProps} from "../gallery/GalleryProps";
import type {HeroProps} from "../hero/HeroProps";
import type {HtmlProps} from "../html/HtmlProps";
import type {ImageStoryProps} from "../image-story/ImageStoryProps";
import type {ImageTextProps} from "../image-text/ImageTextProps";
import type {LogosProps} from "../logos/LogosProps";
import type {MosaicProps} from "../mosaic/MosaicProps";
import type {SliderProps} from "../slider/SliderProps";
import type {StatsProps} from "../stats/StatsProps";
import type {TeaserCardProps} from "../teaser-card/TeaserCardProps";
import type {TestimonialsProps} from "../testimonials/TestimonialsProps";
import type {TextProps} from "../text/TextProps";
import type {VideoCurtainProps} from "../video-curtain/VideoCurtainProps";

/**
 * Sets the vertical space between the content of the split layout
 */
export type VerticalGap = "large" | "default" | "small" | "none";
/**
 * Sets the horizontal space between the content of the split layout
 */
export type HorizontalGap = "large" | "default" | "small" | "none";
/**
 * Makes the side part sticky on scroll
 */
export type Sticky = boolean;
/**
 * Sets the space between the content of the split layout
 */
export type ContentGap = "large" | "default" | "small" | "none";
/**
 * Sets the minimum width of the main section
 */
export type MinimumWidth = "narrow" | "wide";
/**
 * Size of gap to use
 */
export type Gap = "large" | "default" | "small" | "none";
/**
 * Sets the minimum width of the main section
 */
export type MinimumWidth1 = "narrow" | "wide";
/**
 * Determines the order of sections on mobile devices
 */
export type MobileOrder = "mainFirst" | "contextFirst";
/**
 * Determines the order of sections on desktop devices
 */
export type DesktopOrder = "mainFirst" | "contextFirst";
/**
 * Allowed components for the main half of the split layout
 */
export type Main = (
  | CtaProps
  | DividerProps
  | FaqProps
  | FeaturesProps
  | GalleryProps
  | HeroProps
  | HtmlProps
  | ImageStoryProps
  | ImageTextProps
  | LogosProps
  | MosaicProps
  | SliderProps
  | StatsProps
  | TeaserCardProps
  | TestimonialsProps
  | TextProps
  | VideoCurtainProps
)[];
/**
 * Allowed components for the context half of the split layout
 */
export type Context = (
  | CtaProps
  | DividerProps
  | FaqProps
  | FeaturesProps
  | GalleryProps
  | HeroProps
  | HtmlProps
  | ImageStoryProps
  | ImageTextProps
  | LogosProps
  | MosaicProps
  | SliderProps
  | StatsProps
  | TeaserCardProps
  | TestimonialsProps
  | TextProps
  | VideoCurtainProps
)[];

export interface SplitWeightedProps {
  verticalGap?: VerticalGap;
  horizontalGap?: HorizontalGap;
  sticky?: Sticky;
  mainLayout?: MainLayout;
  contextLayout?: ContextLayout;
  order?: Order;
  mainComponents?: Main;
  contextComponents?: Context;
}
export interface MainLayout {
  gap?: ContentGap;
  minWidth?: MinimumWidth;
}
export interface ContextLayout {
  gap?: Gap;
  minWidth?: MinimumWidth1;
}
/**
 * Sets the order of the main and context sections in the split layout
 */
export interface Order {
  mobile?: MobileOrder;
  desktop?: DesktopOrder;
}
